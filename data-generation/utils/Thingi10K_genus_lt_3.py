
"""
Auto-generated download script for Thingi10K dataset.
Assuming the following python packages and external commands are available.

* argparse: for parse command line args.
* requests: for http communication.
* wget: for downloading files.

Usage:

    python Thingi10K_download.py

or

    python Thingi10K_download.py -o output_dir

"""

import argparse
import os.path
import sys
from subprocess import check_call

try:
    import requests
except ImportError:
    error_msg = "Missing module: requests.  To fix it, please run '$ pip install requests'";
    sys.exit(error_msg);

try:
    check_call("which wget".split());
except:
    error_msg = "Missing command: wget.  To fix it, please run '$ port install wget'";
    sys.exit(error_msg);

def parse_args():
    parser = argparse.ArgumentParser(description=__doc__);
    parser.add_argument("--output", "-o", help="Output directory", default="./");
    return parser.parse_args();

def download_file(file_id, output_dir):
    if not os.path.isdir(output_dir):
        raise IOError("Directory {} does not exists".format(output_dir));
    url = "https://www.thingiverse.com/download:{}".format(file_id);
    r = requests.head(url);
    link = r.headers.get("Location", None);
    if link is None:
        print("File {} is no longer available on Thingiverse.".format(file_id));
        return;

    __, ext = os.path.splitext(link);
    output_file = "{}{}".format(file_id, ext.lower());
    output_file = os.path.join(output_dir, output_file);
    print("Downloading {}".format(output_file));
    command = "wget -q -O {} --tries=10 {}".format(output_file, link);
    check_call(command.split());

def main():
    args = parse_args();
    file_ids = [131090,131091,98330,71709,71711,45090,108579,65582,65584,65586,65587,65588,1716277,1716278,55352,55354,1716284,1716285,1716286,45408,57416,225354,71761,71762,71763,71764,112996,59492,65641,65642,65643,65644,98413,90223,90224,90226,49315,49316,49317,49318,59559,59560,39106,112835,135364,39109,108578,39124,98517,80086,102625,43387,39142,43388,67821,110834,43390,39158,39159,39160,92420,92422,39180,39181,39182,55570,45333,55575,55577,55580,55583,55584,370988,67889,67890,1716275,123958,1716280,128058,61792,45409,45410,59747,45412,112998,112999,59752,76143,49528,405883,405884,43389,405886,405887,405889,78211,128065,371103,111008,111009,111013,76199,76202,76205,51637,51639,51640,51641,51642,51643,39358,51647,51649,51651,51652,51653,51654,37322,37323,51660,37326,37328,362964,362965,37627,98797,80366,80368,80369,80370,41466,88572,264707,39442,39443,39444,39445,72214,72215,72216,72217,109089,39460,39461,39462,39463,363052,41521,39495,39496,43594,39499,51797,107100,51806,51807,51809,98412,236171,68246,68247,68255,94886,94887,121535,101089,43748,74471,47851,47852,70381,56047,37620,37621,37622,37332,76539,39678,80657,224026,109344,56109,43849,43850,43853,39768,39769,133991,133992,133993,133994,37744,37745,37746,37747,103284,103286,103289,93067,93068,93069,93070,93071,93072,115601,78738,68501,80365,68509,68511,70561,93101,406449,52147,129973,129975,84930,84931,271301,271303,271304,271305,84943,39893,44000,130030,130031,39922,39923,39924,39927,44025,39930,44027,1772543,48131,48132,68645,68646,68647,68648,68649,68651,1772591,1772593,68658,68659,68661,68662,128057,83002,64573,64574,64575,64577,64578,64579,44102,128076,44110,44111,44900,50283,72212,40067,135363,39108,135365,78737,60584,46263,46264,46265,37750,65400,91350,91351,91352,91353,91354,91355,41509,40171,40172,40179,80084,98518,95494,95497,95500,97588,97589,97590,97591,97593,97594,97595,97596,138557,97599,78733,138581,78736,69128,93073,1185140,40311,40312,42370,38291,38293,38294,38295,38296,38297,56735,267784,60843,60844,60845,136634,136635,136636,39498,136638,136639,191968,97787,91655,91656,91657,91658,122390,370212,111878,370217,87599,87601,87602,99897,99898,99900,224829,99902,99903,99904,99905,99906,99910,99911,99912,37358,69257,85659,57079,57080,57081,57082,57083,57084,57085,55039,55040,61192,61193,61195,61196,75549,370993,85826,126813,44899,126820,44908,450413,44910,97597,44912,41458,65394,65395,214904,65402,83855,98195,98196,135493,69537,67516,51139,51140,51141,51142,45009,67551,84987,47076,65509,67564,67566,47096,47097,47098];
    for file_id in file_ids:
        download_file(file_id, args.output);

if __name__ == "__main__":
    main();